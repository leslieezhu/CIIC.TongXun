/**************************************************************
 * This file is part of  Project  
 * Copyright (C)2019 Microsoft
 * 
 * Author      : Generated by CodeSmith(Entity_v2.cst)
 * Mail        : 
 * Create Date : 2019/11/7 10:01:57
 * Summary     : this file was auto generated by tool . do not modify
 * 
 * 
 * Modified By : 
 * Date        : 
 * Mail        :
 * Comment     :   
 * *************************************************************/

using System; 
using System.Collections.Generic;
using System.Text;
using System.Xml;
using System.Runtime.Serialization;
using ZJ.App.Common;

namespace ZJ.App.Entity
{
	/// <summary>
	/// 表ArticleJournal数据实体
	/// </summary>
	[Serializable]
    [DataContract]
	[TableName("ArticleJournal")]
	public partial class ArticleJournalEntity : EntityBase
	{ 
		
		#region 构造函数
		///<summary>
		///
		///</summary>
		public ArticleJournalEntity():base()
		{
			
		}

        public ArticleJournalEntity(bool IsQueryTemplate) : base(IsQueryTemplate)
        {

        }
		 
		#endregion 
		
		#region 公共属性
        #region JournalId
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_JournalId = "JournalId";
        private int _JournalId;
		///<summary>
		///
		///</summary>
        [DataMember]
		[PrimaryKey]
		public int JournalId
		{
			get{return _JournalId;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_JournalId, value);
                }
                
                _JournalId = value;
            }
		}
        
	    #endregion

        #region JournalName
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_JournalName = "JournalName";
        private string _JournalName;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column]
		public string JournalName
		{
			get{return _JournalName;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_JournalName, value);
                }
                
                _JournalName = value;
            }
		}
        
	    #endregion

        #region PropertyName
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_PropertyName = "PropertyName";
        private string _PropertyName;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column]
		public string PropertyName
		{
			get{return _PropertyName;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_PropertyName, value);
                }
                
                _PropertyName = value;
            }
		}
        
	    #endregion
		#endregion
	}
}

