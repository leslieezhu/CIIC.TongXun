/**************************************************************
 * This file is part of SMP Project
 * Copyright (C)2020 Microsoft
 * 
 * Author      : Generated by CodeSmith(DAL_v3.cst)
 * Mail        : 
 * Create Date : 2020/4/14 9:45:46
 * Summary     : this file was auto generated by tool . do not modify
 * 
 * 
 * Modified By : 
 * Date        : 
 * Mail        : 
 * Comment     :   
 * *************************************************************/
using System;
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections.Generic;
using ZJ.App.Common;
using ZJ.App.Entity;

namespace ZJ.App.DAL
{
    /// <summary>
    /// Data Access Layer class dbo.Article.
    /// </summary>
    public partial class ArticleDAL : DalBase<ArticleEntity>
    {
        #region 构造函数
        
		public ArticleDAL(): base()
        { }

        public ArticleDAL(string DbName): base(DbName)
        { }

        public ArticleDAL(DbTransaction tran): base(tran)
        { }
        
        #endregion
        
        #region public method
        
        public void BulkInsert(List<ArticleEntity> list)
        {
            foreach (ArticleEntity item in list)
            {
                this.Insert(item);
            }
            /*
            SqlBulkCopy bulkCopy;
            if (System.Transactions.Transaction.Current != null)
            {
                using (System.Transactions.TransactionScope t = new System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.Suppress))
                {
                    bulkCopy = new SqlBulkCopy(CurrentDatabase.ConnectionString, SqlBulkCopyOptions.CheckConstraints);
                    bulkCopy.BulkCopyTimeout = 360;
                    bulkCopy.DestinationTableName = "Article";
                    DataTable dataTable =ConvertToDataTable(list);
                    bulkCopy.ColumnMappings.Add("Id", "Id");
                    bulkCopy.ColumnMappings.Add("ArticleTitle", "ArticleTitle");
                    bulkCopy.ColumnMappings.Add("ArticleContent", "ArticleContent");
                    bulkCopy.ColumnMappings.Add("IsPublic", "IsPublic");
                    bulkCopy.ColumnMappings.Add("CreateTime", "CreateTime");
                    bulkCopy.ColumnMappings.Add("CreateBy", "CreateBy");
                    bulkCopy.ColumnMappings.Add("IsDelete", "IsDelete");
                    bulkCopy.ColumnMappings.Add("ArticlePropertyId", "ArticlePropertyId");
                    bulkCopy.ColumnMappings.Add("CategoryId", "CategoryId");
                    bulkCopy.ColumnMappings.Add("NoOfJournal", "NoOfJournal");
                    bulkCopy.ColumnMappings.Add("NoOfCategory", "NoOfCategory");
                    bulkCopy.ColumnMappings.Add("ArticleTitleAlias", "ArticleTitleAlias");
                    bulkCopy.ColumnMappings.Add("IsTop", "IsTop");
                    
                    bulkCopy.WriteToServer(dataTable);
                    t.Complete();
                    bulkCopy.Close();
                }
            }
            else
            {
                bulkCopy = new SqlBulkCopy(CurrentDatabase.ConnectionString, SqlBulkCopyOptions.CheckConstraints);
                bulkCopy.BulkCopyTimeout = 360;
                bulkCopy.DestinationTableName = "Article";
                DataTable dataTable =ConvertToDataTable(list);
                bulkCopy.ColumnMappings.Add("Id", "Id");
                bulkCopy.ColumnMappings.Add("ArticleTitle", "ArticleTitle");
                bulkCopy.ColumnMappings.Add("ArticleContent", "ArticleContent");
                bulkCopy.ColumnMappings.Add("IsPublic", "IsPublic");
                bulkCopy.ColumnMappings.Add("CreateTime", "CreateTime");
                bulkCopy.ColumnMappings.Add("CreateBy", "CreateBy");
                bulkCopy.ColumnMappings.Add("IsDelete", "IsDelete");
                bulkCopy.ColumnMappings.Add("ArticlePropertyId", "ArticlePropertyId");
                bulkCopy.ColumnMappings.Add("CategoryId", "CategoryId");
                bulkCopy.ColumnMappings.Add("NoOfJournal", "NoOfJournal");
                bulkCopy.ColumnMappings.Add("NoOfCategory", "NoOfCategory");
                bulkCopy.ColumnMappings.Add("ArticleTitleAlias", "ArticleTitleAlias");
                bulkCopy.ColumnMappings.Add("IsTop", "IsTop");
                
                bulkCopy.WriteToServer(dataTable);
                bulkCopy.Close();
            }
             */
        }
        #endregion
        
        #region help method
        public DataTable ConvertToDataTable(List<ArticleEntity> list)
        {
            DataTable table = new DataTable("Article");
            table.Columns.Add("Id", typeof(System.Int32));
            table.Columns.Add("ArticleTitle", typeof(System.String));
            table.Columns.Add("ArticleContent", typeof(System.String));
            table.Columns.Add("IsPublic", typeof(System.Int32));
            table.Columns.Add("CreateTime", typeof(System.DateTime));
            table.Columns.Add("CreateBy", typeof(System.Int32));
            table.Columns.Add("IsDelete", typeof(System.Int32));
            table.Columns.Add("ArticlePropertyId", typeof(System.Int32));
            table.Columns.Add("CategoryId", typeof(System.Int32));
            table.Columns.Add("NoOfJournal", typeof(System.Int16));
            table.Columns.Add("NoOfCategory", typeof(System.Int16));
            table.Columns.Add("ArticleTitleAlias", typeof(System.String));
            table.Columns.Add("IsTop", typeof(System.Int32));
            
            if (list != null && list.Count > 0)
            {
                foreach (ArticleEntity entity in list)
                {
                    table.Rows.Add(
                        entity.Id,
                        entity.ArticleTitle,
                        entity.ArticleContent,
                        entity.IsPublic,
                        entity.CreateTime,
                        entity.CreateBy,
                        entity.IsDelete,
                        entity.ArticlePropertyId,
                        entity.CategoryId,
                        entity.NoOfJournal,
                        entity.NoOfCategory,
                        entity.ArticleTitleAlias,
                        entity.IsTop
                        );
                }
            }
            return table;
        }
        #endregion
    }
}
